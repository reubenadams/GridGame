import numpy as np

class UnitState():
	def __init__(self, position, target_position, team, path):
		super().__init__()
		self.position = position
		self.target_position = target_position
		self.team = team
		self.path = path

class GameState():
	def __init__(self, terrain_grid, units):
		super().__init__()
		self.terrain_grid = terrain_grid
		self.units = units


def empty_grid(n_rows, n_cols):
	return np.full((n_rows, n_cols), False)

def example_grid():
	map_string = """
	................................
	................................
	................................
	................................
	................................
	................................
	............XXXXXXXXXXXXXXXX....
	............XXXXXXXXXXXXXXXX....
	................................
	................................
	............XXXXXXXXXXXXXXXX....
	............XXXXXXXXXXXXXXXX....
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	................................
	"""

	# Remove newline characters and create a single string
	map_string = map_string.strip().replace("\n", "").replace(" ", "")

	# Convert the string to a boolean array
	bool_map = np.array([c == 'X' for c in map_string], dtype=bool)

	# Reshape the array to a 2D 32x32 grid
	bool_map = bool_map.reshape(32, 32)

	return bool_map

def example_unit():
	return UnitState(
		position=(0, 0),
		target_position=(5, 0),
		team=0,
		path=[(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0)]
	)



def create_example_game():
	terrain_grid = example_grid()
	example_units = [example_unit()]
	return GameState(terrain_grid, example_units)
	

def update_game_state():
	pass

